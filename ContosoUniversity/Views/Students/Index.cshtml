@model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="AllStudents">Back to Full List</a>
        </p>
        <p>
            From Date: <input type="date" name="fromDate" value="@ViewData["FromDate"]" />
            To Date: <input type="date" name="toDate" value="@ViewData["ToDate"]" />
            <input type="submit" value="Filter" />
        </p>
    </div>
</form>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                @*  @Html.DisplayNameFor(model => model.LastName) *@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a>
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.FirstMidName)
            First Name
            </th> *@
            @*             <th>
            @Html.DisplayNameFor(model => model.EnrollmentDate)
            </th> *@

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-success">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-success">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var pages = "";
}
<div>

    @* @(Model.PageIndex) of @Model.TotalPages *@
    @for (var i = 1; i <= Model.TotalPages; i++)
    {
            if (i == Model.PageIndex)
            {
                <a class="ms-1 btn btn-outline-dark" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(i)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @i
                </a>
            }
            else
            {
                <a class="ms-1 btn btn-outline-info" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(i)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @i
                </a>
            }
    }
</div>

@* <a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-sm btn-outline-success @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-success @nextDisabled">
    Next
</a> *@
